<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://tcjq.eu/feed.xml" rel="self" type="application/atom+xml"/><link href="https://tcjq.eu/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-25T21:57:34+00:00</updated><id>https://tcjq.eu/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Arduino Trigger Box for TMS</title><link href="https://tcjq.eu/blog/2025/distill/" rel="alternate" type="text/html" title="Arduino Trigger Box for TMS"/><published>2025-09-21T00:00:00+00:00</published><updated>2025-09-21T00:00:00+00:00</updated><id>https://tcjq.eu/blog/2025/distill</id><content type="html" xml:base="https://tcjq.eu/blog/2025/distill/"><![CDATA[<h1 id="silicon-spike-an-arduino-trigger-box-for-tms">Silicon Spike: An Arduino Trigger Box for TMS</h1> <blockquote> <p>üîó GitHub Repository: <a href="https://github.com/Ippolz/SiliconSpike">Ippolz/SiliconSpike</a><br/> üìÑ Published Paper: <a href="assets/pdf/paper7.pdf">pdf</a></p> </blockquote> <h2 id="description">Description</h2> <p><strong>Silicon Spike</strong> is an open-source <strong>Arduino-based trigger box</strong> developed at the <strong>Center for Cognitive Neuroscience of Cesena</strong> (University of Bologna). It offers a cost-effective and customizable way to control <strong>Transcranial Magnetic Stimulation (TMS)</strong> and <strong>Biopac</strong> systems with high precision.</p> <p>The system was designed by <strong>Giuseppe Ippolito</strong> and <strong>Thomas Quettier</strong> with the goal of empowering neuroscience labs with affordable hardware that integrates seamlessly into experimental pipelines.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/triggerbox-480.webp 480w,/assets/img/triggerbox-800.webp 800w,/assets/img/triggerbox-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/triggerbox.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="features">Features</h2> <ul> <li> <p>‚öôÔ∏è <strong>TMS &amp; Biopac Integration</strong><br/> Compatible with commercial TMS devices and physiological recording systems.</p> </li> <li> <p>üîÅ <strong>Custom Triggering Sequences</strong><br/> Easily adaptable via Arduino code for specific experimental needs.</p> </li> <li> <p>üíª <strong>Open Source</strong><br/> Full access to firmware and hardware documentation.</p> </li> <li> <p>üìñ <strong>Clear Setup Instructions</strong><br/> Step-by-step guide available in the repository README.</p> </li> </ul> <h2 id="how-to-cite">How to Cite</h2> <p>If you use Silicon Spike in your research, please cite our paper:</p> <blockquote> <p><strong>Ippolito, G., Quettier, T., Borgomaneri, S., &amp; Romei, V.</strong> (2025).<br/> <em>Silicon Spike: An Arduino-based low-cost and open-access triggerbox to precisely control TMS devices</em>.<br/> <em>Behavior Research Methods</em>, 57(5), 145.<br/> <a href="https://doi.org/10.3758/s13428-025-02653-y">https://doi.org/10.3758/s13428-025-02653-y</a></p> </blockquote> <h2 id="license">License</h2> <p>This project is licensed under the <strong>[MIT License]</strong>.<br/> See the <a href="https://github.com/Ippolz/SiliconSpike/blob/main/LICENSE.md"><code class="language-plaintext highlighter-rouge">LICENSE.md</code></a> file for full details.</p> <h2 id="contact">Contact</h2> <p>For questions or collaboration:</p> <ul> <li><strong>Thomas Quettier</strong> ‚Äî <a href="mailto:thomas.quettier2@unibo.it">thomas.quettier2@unibo.it</a></li> <li><strong>Giuseppe Ippolito</strong> ‚Äî <a href="mailto:giuseppe.ippolito8@unibo.it">giuseppe.ippolito8@unibo.it</a></li> </ul> <h2 id="-leave-a-comment">üí¨ Leave a Comment</h2> <p>Have thoughts, questions, or suggestions, spot an error?</p> <p>üëâ Scroll down and leave a comment below! I‚Äôd love to hear from you.</p>]]></content><author><name></name></author><category term="tool"/><category term="open_science"/><summary type="html"><![CDATA[An open source hardware solution for delivering precise TMS triggers.]]></summary></entry><entry><title type="html">Psychopy SST Template</title><link href="https://tcjq.eu/blog/2025/sst/" rel="alternate" type="text/html" title="Psychopy SST Template"/><published>2025-09-21T00:00:00+00:00</published><updated>2025-09-21T00:00:00+00:00</updated><id>https://tcjq.eu/blog/2025/sst</id><content type="html" xml:base="https://tcjq.eu/blog/2025/sst/"><![CDATA[<h1 id="stop-signal-task-sst-template-repository">Stop Signal Task (SST) Template Repository</h1> <p>This repository contains all necessary resources for setting up and running the <strong>Stop Signal Task (SST)</strong> ‚Äî a well-established paradigm in cognitive neuroscience for studying <strong>response inhibition and cognitive control</strong>.</p> <blockquote> <p>üîó <strong>GitHub Repository:</strong> <a href="https://github.com/Merluin/Psychopy_SST_template">Merluin/Psychopy_SST_template</a></p> </blockquote> <h2 id="overview">Overview</h2> <p>This template includes:</p> <ul> <li>‚úÖ A <strong>PsychoPy3 implementation</strong> of the SST</li> <li>‚úÖ An <strong>R program</strong> to compute <strong>Stop Signal Reaction Time (SSRT)</strong><br/> following the standardized procedures outlined in <a href="#references">Verbruggen et al., 2019</a></li> </ul> <h2 id="repository-structure">Repository Structure</h2> <ul> <li> <p><strong>PsychoPy3 SST Task</strong><br/> <code class="language-plaintext highlighter-rouge">.psyexp</code> and supporting files for running the experiment in PsychoPy</p> </li> <li> <p><strong>R Program for SSRT</strong><br/> Scripts to preprocess data and compute SSRT metrics</p> </li> </ul> <h2 id="task-design">Task Design</h2> <p>The SST consists of:</p> <ul> <li><strong>Go trials</strong>: Respond as fast as possible to a green arrow indicating direction.</li> <li><strong>Stop trials</strong>: Inhibit your response if a stop signal (e.g., <code class="language-plaintext highlighter-rouge">"XX"</code>) appears after a short delay.</li> </ul> <p>The <strong>Stop Signal Delay (SSD)</strong> is dynamically adjusted based on the participant‚Äôs performance to estimate the <strong>Stop Signal Reaction Time (SSRT)</strong>.</p> <h2 id="task-parameters">Task Parameters</h2> <table> <thead> <tr> <th>Parameter</th> <th>Value / Description</th> </tr> </thead> <tbody> <tr> <td>Initial SSD</td> <td>150 ms after go signal onset</td> </tr> <tr> <td>SSD Range</td> <td>50 ms to 650 ms</td> </tr> <tr> <td>Go Stimulus</td> <td>Green arrow (left or right)</td> </tr> <tr> <td>Stop Signal</td> <td><code class="language-plaintext highlighter-rouge">"XX"</code> shown after variable SSD</td> </tr> </tbody> </table> <h2 id="requirements">Requirements</h2> <h3 id="psychopy-task">PsychoPy Task</h3> <ul> <li>PsychoPy version <code class="language-plaintext highlighter-rouge">2022.1.4</code> or later</li> </ul> <h3 id="r-scripts">R Scripts</h3> <ul> <li>Latest version of R (tested on 4.x)</li> <li>Optionally: RStudio for better usability</li> </ul> <h2 id="installation">Installation</h2> <h3 id="1-run-the-psychopy-task">1. Run the PsychoPy Task</h3> <ul> <li>Install <a href="https://www.psychopy.org/download.html">PsychoPy</a></li> <li>Clone or download the repository</li> <li>Open <code class="language-plaintext highlighter-rouge">SST.psyexp</code> in PsychoPy</li> <li>Run the task</li> </ul> <h3 id="2-analyze-data-in-r">2. Analyze Data in R</h3> <ul> <li>Install R from <a href="https://cran.r-project.org">CRAN</a></li> <li>Open the R script(s) in the <code class="language-plaintext highlighter-rouge">R Program for SSRT</code> folder</li> <li>Follow in-script comments to: <ul> <li>Import task data</li> <li>Clean responses</li> <li>Compute SSRT</li> </ul> </li> </ul> <h2 id="customization">Customization</h2> <ul> <li> <p><strong>In PsychoPy</strong>:</p> <ul> <li>Modify trial durations and timing</li> <li>Change response keys or stop signal format</li> </ul> </li> <li> <p><strong>In R</strong>:</p> <ul> <li>Adapt input format for your data</li> <li>Extend analyses (e.g., condition-level SSRT, visualizations)</li> </ul> </li> </ul> <h2 id="references">References</h2> <p>Verbruggen, F., Aron, A. R., Band, G. P., Beste, C., Bissett, P. G., Brockett, A. T., ‚Ä¶ &amp; Boehler, C. N. (2019).<br/> <strong>A consensus guide to capturing the ability to inhibit actions and impulsive behaviors in the stop-signal task.</strong><br/> <em>eLife</em>, 8, e46323.<br/> üîó <a href="https://doi.org/10.7554/eLife.46323">https://doi.org/10.7554/eLife.46323</a></p> <h2 id="-the-coffee-machine-corner">‚òï The Coffee Machine Corner</h2> <p>This blog ‚Äî The Coffee Machine ‚Äî is where ideas percolate. If you found this project useful, consider supporting the time and caffeine behind it: üëâ <a href="https://www.buymeacoffee.com/thomasquettier">Buy me a coffee</a></p> <p>You‚Äôre also warmly invited to fork the repo, contribute, or reach out if you‚Äôre working on similar tools. Collaboration brews innovation!</p> <p>üëâ Scroll down and leave a comment below! I‚Äôd love to hear from you.</p>]]></content><author><name></name></author><category term="template,"/><category term="open_science"/><summary type="html"><![CDATA[A complete PsychoPy + R solution for running and analyzing the Stop Signal Task (SST) following Verbruggen et al. (2019).]]></summary></entry><entry><title type="html">Data Analysis Template</title><link href="https://tcjq.eu/blog/2024/Ranalysis/" rel="alternate" type="text/html" title="Data Analysis Template"/><published>2024-09-23T00:00:00+00:00</published><updated>2024-09-23T00:00:00+00:00</updated><id>https://tcjq.eu/blog/2024/Ranalysis</id><content type="html" xml:base="https://tcjq.eu/blog/2024/Ranalysis/"><![CDATA[<h1 id="data-analysis-template-a-reproducible-r-framework-for-psychopy-behavioral-experiments">Data analysis template: A Reproducible R Framework for PsychoPy Behavioral Experiments</h1> <p>I‚Äôm excited to share a new open-source project designed to streamline the process of analyzing behavioral data collected with <a href="https://www.psychopy.org/">PsychoPy</a>:</p> <p>üëâ <strong><a href="https://github.com/Merluin/Data_analysis_template">Data_analysis_template on GitHub</a></strong></p> <p>This template is ideal for researchers who collect <code class="language-plaintext highlighter-rouge">.csv</code> files from PsychoPy experiments and want a consistent, reusable R-based analysis workflow.</p> <h2 id="what-it-does">What It Does</h2> <p>The template provides:</p> <ul> <li>A structured R project layout (<code class="language-plaintext highlighter-rouge">R/</code>, <code class="language-plaintext highlighter-rouge">data/</code>, <code class="language-plaintext highlighter-rouge">original_data/</code>, etc.)</li> <li>Ready-to-use functions for common preprocessing steps</li> <li>Support for saving results in <code class="language-plaintext highlighter-rouge">.RData</code> and <code class="language-plaintext highlighter-rouge">.xlsx</code></li> <li>A clean GitHub repository with MIT license and template button</li> </ul> <h2 id="why-use-it">Why Use It</h2> <p>This template was created to address common issues in behavioral science research:</p> <ul> <li>Poor file organization</li> <li>Redundant code copy-pasting between experiments</li> <li>Inconsistent use of statistical functions</li> <li>Lack of reproducibility</li> </ul> <p>By providing a clear, modular R structure and helper functions, this project promotes transparency and makes it easy to replicate your own or others‚Äô work.</p> <h2 id="what-is-an-r-project-rproj">What is an R Project (<code class="language-plaintext highlighter-rouge">.Rproj</code>)?</h2> <p>An R project file (<code class="language-plaintext highlighter-rouge">.Rproj</code>) defines a <strong>self-contained environment</strong> in RStudio. Think of it as a sandbox:</p> <ul> <li>All your scripts, data, and outputs stay in one place</li> <li>You don‚Äôt need to manage complex file paths ‚Äî <code class="language-plaintext highlighter-rouge">here::here()</code> or relative paths work out of the box</li> <li>It‚Äôs easy to <strong>share</strong>, <strong>version</strong>, and <strong>reproduce</strong> the analysis on another computer</li> </ul> <p>In short: <strong>open the <code class="language-plaintext highlighter-rouge">.Rproj</code> file, and you‚Äôre ready to go.</strong></p> <h2 id="getting-started">Getting Started</h2> <p>You can start using the template in <strong>three easy ways</strong>:</p> <h3 id="1-use-it-directly-from-github">1. Use it directly from GitHub</h3> <p>Click the green <strong>‚ÄúUse this template‚Äù</strong> button:<br/> üëâ <a href="https://github.com/Merluin/Data_analysis_template">https://github.com/Merluin/Data_analysis_template</a></p> <p>This creates a new copy under your own GitHub account, preserving the folder structure and code.<br/> ‚ú® Don‚Äôt forget to leave a ‚≠ê on the repository if you find it helpful!</p> <h3 id="2-clone-manually">2. Clone manually</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/Merluin/Data_analysis_template.git
</code></pre></div></div> <p>Then open Data_analysis.Rproj in RStudio and start analyzing.</p> <h3 id="3-just-download-the-zip">3. Just download the ZIP</h3> <p>Click the ‚ÄúCode‚Äù button and select ‚ÄúDownload ZIP‚Äù. Unzip it anywhere, open the .Rproj file, and you‚Äôre ready to go ‚Äî no Git required.</p> <h2 id="-project-structure">üìÅ Project Structure</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Data_analysis_template/
‚îú‚îÄ‚îÄ DESCRIPTION             <span class="c"># R package metadata</span>
‚îú‚îÄ‚îÄ R/                      <span class="c"># All core analysis functions</span>
‚îú‚îÄ‚îÄ data/                   <span class="c"># Cleaned datasets saved as .RData</span>
‚îú‚îÄ‚îÄ original_data/          <span class="c"># Raw .csv files from PsychoPy</span>
‚îú‚îÄ‚îÄ scripts/                <span class="c"># Custom analysis scripts (per experiment)</span>
‚îú‚îÄ‚îÄ LICENSE                 <span class="c"># MIT License</span>
‚îú‚îÄ‚îÄ README.md               <span class="c"># Project description</span>
‚îî‚îÄ‚îÄ Data_analysis.Rproj     <span class="c"># RStudio project file</span>
</code></pre></div></div> <h2 id="-the-coffee-machine-corner">‚òï The Coffee Machine Corner</h2> <p>This blog ‚Äî The Coffee Machine ‚Äî is where ideas percolate. If you found this project useful, consider supporting the time and caffeine behind it: üëâ <a href="https://www.buymeacoffee.com/thomasquettier">Buy me a coffee</a></p> <p>You‚Äôre also warmly invited to fork the repo, contribute, or reach out if you‚Äôre working on similar tools. Collaboration brews innovation!</p> <p>üëâ Scroll down and leave a comment below! I‚Äôd love to hear from you.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="analysis"/><category term="template"/><category term="open_science"/><summary type="html"><![CDATA[Rproj template for data analysis]]></summary></entry><entry><title type="html">TMS TouchPad</title><link href="https://tcjq.eu/blog/2024/TMSpad/" rel="alternate" type="text/html" title="TMS TouchPad"/><published>2024-01-01T00:00:00+00:00</published><updated>2024-01-01T00:00:00+00:00</updated><id>https://tcjq.eu/blog/2024/TMSpad</id><content type="html" xml:base="https://tcjq.eu/blog/2024/TMSpad/"><![CDATA[<h1 id="tms-touchpad-p4r4">TMS TouchPad P4R4</h1> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/pad-480.webp 480w,/assets/img/pad-800.webp 800w,/assets/img/pad-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/pad.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>Welcome to the <strong>TMS-TouchPad-P4R4</strong> repository ‚Äî an open-source interface developed to enhance and simplify <strong>Transcranial Magnetic Stimulation (TMS)</strong> sessions in neuroscience research.</p> <blockquote> <p>üîó GitHub Repository: <a href="https://github.com/Merluin/TMS-TouchPad-P4R4">Merluin/TMS-TouchPad-P4R4</a></p> </blockquote> <p>This tool combines an <strong>Arduino-based control system</strong> with a <strong>Python GUI running on a Raspberry Pi</strong>, providing a modular and user-friendly solution for interacting with TMS hardware and EEG/EMG recording systems.</p> <h2 id="Ô∏è-safety-and-disclaimer">‚ö†Ô∏è Safety and Disclaimer</h2> <blockquote> <p><strong>This is a work-in-progress research tool</strong>.<br/> The authors <strong>assume no responsibility</strong> for damage, injury, or misuse of the hardware or software.<br/> Use is strictly limited to individuals trained and competent in the handling of <strong>TMS and EEG/EMG systems</strong>.</p> </blockquote> <h2 id="open-to-collaboration">Open to Collaboration</h2> <p>We welcome collaboration with:</p> <ul> <li>Researchers using TMS or EMG/EEG setups</li> <li>Developers interested in expanding the GUI or microcontroller features</li> <li>Labs aiming to integrate automated stimulation protocols (e.g., ccPAS)</li> </ul> <p>Please reach out if you‚Äôd like to contribute, provide feedback, or test the system.</p> <h2 id="overview">Overview</h2> <p>The <strong>TMS-TouchPad-P4R4</strong> enables <strong>precise control</strong> over TMS stimulation parameters using a graphical interface and real-time communication with an Arduino-compatible board.</p> <p>It is compatible with:</p> <ul> <li>TMS devices receiving TTL input via BNC</li> <li>EEG/EMG systems logging event markers</li> <li>Protocols such as <strong>ccPAS</strong></li> </ul> <h2 id="key-features">Key Features</h2> <ul> <li> <p><strong>Arduino Integration</strong><br/> Low-level control of TMS triggers and BNC output via <code class="language-plaintext highlighter-rouge">R4_ppTMS.ino</code></p> </li> <li> <p><strong>Python GUI for Raspberry Pi</strong><br/> Intuitive interface to adjust delay times, TTL duration, and trigger sequences</p> </li> <li> <p><strong>EEG/EMG Compatibility</strong><br/> Outputs clean TTL pulses aligned with stimulation events</p> </li> <li> <p><strong>Dual Serial Communication</strong><br/> Uses both <code class="language-plaintext highlighter-rouge">Serial</code> (USB) and <code class="language-plaintext highlighter-rouge">Serial1</code> (TX/RX) for flexible setup</p> </li> </ul> <h2 id="-repository-contents">üìÅ Repository Contents</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| File                             | Description                                                   |
|----------------------------------|---------------------------------------------------------------|
| <span class="sb">`</span>R4_ppTMS.ino<span class="sb">`</span>                   | Arduino sketch <span class="k">for </span>managing BNC TTL outputs and TMS triggers |
| <span class="sb">`</span>ppTMS.py<span class="sb">`</span>                       | Python script <span class="k">for </span>GUI-based control on Raspberry Pi          |
| <span class="sb">`</span>User Manual <span class="k">for </span>TMS TouchPad P4R4.pdf<span class="sb">`</span> | Setup, usage, and safety instructions                     |
</code></pre></div></div> <h2 id="hardware-setup">Hardware Setup</h2> <ul> <li><strong>Board</strong>: Arduino-compatible R4 board</li> <li><strong>Connection</strong>: <ul> <li><code class="language-plaintext highlighter-rouge">Serial1.available()</code> for TX/RX pin communication</li> <li><code class="language-plaintext highlighter-rouge">Serial.available()</code> for USB cable input</li> </ul> </li> <li><strong>Output</strong>: BNC connections for TTL signaling</li> </ul> <h2 id="-final-note">üß† Final Note</h2> <p>This device is intended for research use only. If you plan to adapt or extend this interface, please consider sharing your improvements with the community via pull requests or forks.</p> <h2 id="-the-coffee-machine-corner">‚òï The Coffee Machine Corner</h2> <p>This blog ‚Äî The Coffee Machine ‚Äî is where ideas percolate. If you found this project useful, consider supporting the time and caffeine behind it: üëâ <a href="https://www.buymeacoffee.com/thomasquettier">Buy me a coffee</a></p> <p>You‚Äôre also warmly invited to fork the repo, contribute, or reach out if you‚Äôre working on similar tools. Collaboration brews innovation!</p> <p>üëâ Scroll down and leave a comment below! I‚Äôd love to hear from you.</p>]]></content><author><name></name></author><category term="tool"/><category term="open_science"/><summary type="html"><![CDATA[An open source hardware solution for TMS Controls.]]></summary></entry></feed>